- name: Deploy Frontend and Backend Containers
  hosts: aws_servers
  become: yes
  vars:
    docker_registry: "docker.io"
    docker_username: "tasneemkhaled"
    frontend_image_name: "frontend"
    frontend_image_tag: "72"
    backend_image_name: "backend"
    backend_image_tag: "72"
    frontend_container_name: "my-frontend-container"
    backend_container_name: "my-backend-container"
    host_frontend_port: 3000
    container_frontend_port: 3000
    host_backend_port: 3001
    container_backend_port: 3001

  tasks:
    - name: Ensure Docker is installed and running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Pull the frontend Docker image from Docker Hub if not present
      docker_image:
        name: "{{ docker_registry }}/{{ docker_username }}/{{ frontend_image_name }}:{{ frontend_image_tag }}"
        pull: yes
      register: frontend_image_result
      when: frontend_image_result.image is not defined

    - name: Stop and remove the existing frontend container
      docker_container:
        name: "{{ frontend_container_name }}"
        state: absent
      ignore_errors: yes # Allow this to fail if the container doesn't exist

    - name: Run the frontend Docker container
      docker_container:
        name: "{{ frontend_container_name }}"
        image: "{{ docker_registry }}/{{ docker_username }}/{{ frontend_image_name }}:{{ frontend_image_tag }}"
        ports:
          - "{{ host_frontend_port }}:{{ container_frontend_port }}"
        restart_policy: always
        state: started

    - name: Pull the backend Docker image from Docker Hub if not present
      docker_image:
        name: "{{ docker_registry }}/{{ docker_username }}/{{ backend_image_name }}:{{ backend_image_tag }}"
        pull: yes
      register: backend_image_result
      when: backend_image_result.image is not defined

    - name: Stop and remove the existing backend container
      docker_container:
        name: "{{ backend_container_name }}"
        state: absent
      ignore_errors: yes # Allow this to fail if the container doesn't exist

    - name: Run the backend Docker container
      docker_container:
        name: "{{ backend_container_name }}"
        image: "{{ docker_registry }}/{{ docker_username }}/{{ backend_image_name }}:{{ backend_image_tag }}"
        ports:
          - "{{ host_backend_port }}:{{ container_backend_port }}"
        restart_policy: always
        state: started
